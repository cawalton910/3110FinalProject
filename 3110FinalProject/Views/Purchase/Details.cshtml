@model IEnumerable<_3110FinalProject.Models.Entities.ProductPurchase>

@{
    ViewData["Title"] = "Purchase Order";
    var customerId = (int)ViewData["customerid"]!;
    var purchaseId = (int)ViewData["purchaseId"]!;
}

<h1>Purchase Order #@purchaseId</h1>

<p>
    <a asp-action="ViewPurchases" asp-route-id="@customerId">Back</a> |
    <a asp-action="AddItem" asp-route-id="@customerId" asp-route-purchaseId="@purchaseId">Add item</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Product)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Product.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Product.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
@*                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |*@
                @Html.ActionLink("Remove", "RemoveItem", new {  id=customerId, purchaseId=purchaseId, productId=item.Id  })
            </td>
        </tr>
}
    </tbody>
</table>
