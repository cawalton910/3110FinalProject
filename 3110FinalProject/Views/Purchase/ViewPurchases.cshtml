@model IEnumerable<_3110FinalProject.Models.Entities.Purchase>
@using _3110FinalProject.Services
@inject ICustomerRepository _customerRepo

@{
    ViewData["Title"] = "Purchases";
    var customerId = (int)ViewData["Customer"]!;
    var customer = await _customerRepo.ReadAsync(customerId);
}

<h1>Purchase Orders for @customer!.FirstName @customer.LastName</h1>
<p>
 
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Notes)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeliveryAddress)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Products.Count)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Notes)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DeliveryAddress)
            </td>
            <td>
                    @Html.ActionLink("View", "Details", "ProductPurchase", new {  id=customerId, purchaseId=item.Id }) |
                
                    @Html.ActionLink("Delete", "Delete", "Purchase", new {  id=item.CustomerId, purchaseId=item.Id  })
            </td>
        </tr>
}
    </tbody>
</table>
