@model IEnumerable<_3110FinalProject.Models.Entities.Product>
@using _3110FinalProject.Services
@inject ICustomerRepository _customerRepo

@{
    var customerId = (int)ViewData["id"];
    var purchaseId = (int)ViewData["purchaseId"];
    ViewData["Title"] = $"PO#{purchaseId}";
    var customer = await _customerRepo.ReadAsync(customerId);
}

<h1 style="display: inline-block">Purchase Order #@purchaseId</h1>
<h4 style="display: inline-block; float:right">Customer: @customer.FirstName @customer.LastName</h4>
<p><a asp-action="Details" asp-route-id="@customerId" asp-route-purchaseId="@purchaseId">Back</a></p>

<p>
    <div class="modal fade" id="createPurchaseModal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div id="mainContent" class="modal-content">
                <form id="createPurchaseForm" asp-controller="Purchase" asp-action="AddItem" asp-route-id="@customerId" asp-route-purchaseId="@purchaseId">
                    <div class="modal-header">
                        <h5 class="modalTitle" id="AddItemTitle">
                            Enter Quantity
                        </h5>
                        <button type="button" class="btn-close"
                                data-bs-dismiss="modal" aria-label="Close">
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="form-group row mb-3">
                            <label class="col-sm-2 col-form-label">
                                Quantity
                            </label>
                            <div class="col-sm-10">

                                <input name="Quantity" class="form-control" />
                                <input name="ProductId" hidden id="productIdInput" class="form-control" />
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" asp-route-productid="productIdInput" asp-route-productId="ProductId" asp-route-quantity="Quantity" class="btn btn-primary">
                            Add
                        </button>
                        <button type="reset" class="btn btn-secondary">Clear</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Weight)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Weight)
            </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
            <td>
                   
                    @{
                        //ViewData["PurchaseId"] = (int)purchaseId;
                        //ViewData["ProductId"] = (int)item.Id;
                    }
                    @*<partial name="_CreatePurchaseModal" view-data="ViewData">*@
                        <a type="button" class="btn btn-primary mb-3" data-title="@item.Name" data-id="@item.Id" id="btnCreatePurchase">Add Item</a>
                @*@Html.ActionLink("Add", "AddItem", new { id=customerId, purchaseId=item.Id }) |*@
            </td>
        </tr>
}
    </tbody>
</table>
